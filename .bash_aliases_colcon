function colcon {
	if [ "$(pwd)" != "/home/nikolai.morin/gc2/apex_ws" ]; then
		echo "colcon must be run from apex_ws"
	fi
	shopt -s nullglob
	for f in src/bazel-*; do touch $f/COLCON_IGNORE; done
	for f in src/grace_examples/bazel-*; do touch $f/COLCON_IGNORE; done
	command colcon "$@"
}

function colcon_build_in {
	local suffix=$1
	shift
	colcon build --mixin debug --build-base build_"$suffix" --install-base install_"$suffix" "$@"
}

function colcon_build_in_cert {
	local suffix=$1
	shift
	APEX_CERT=ON colcon build --mixin certifiable --build-base build_cert_"$suffix" --install-base install_cert_"$suffix" "$@"
}

function colcon_build_in_rel {
	local suffix=$1
	shift
	colcon build --build-base build_"$suffix" --install-base install_"$suffix" "$@"
}

function colcon_build_asan {
	colcon_build_in asan --cmake-args '-DCMAKE_CXX_FLAGS="-fsanitize=address"' '-DCMAKE_C_FLAGS="-fsanitize=address"' "$@"
}

function colcon_build_cert {
	APEX_CERT=ON colcon_build_in cert --mixin certifiable "$@"
}

function colcon_build_rel {
		colcon build --build-base build_rel --install-base install_rel "$@"
}

function colcon_build_ubsan {
	colcon_build_in ubsan --cmake-args '-DCMAKE_CXX_FLAGS="-fsanitize=undefined"' '-DCMAKE_C_FLAGS="-fsanitize=undefined"' "$@"
}

function colcon_build_prof {
	colcon_build_in prof --cmake-args '-DBUILD_TESTING=OFF' '-DCMAKE_CXX_FLAGS="-fno-omit-frame-pointer"' '-DCMAKE_C_FLAGS="-fno-omit-frame-pointer"' "$@"
}

function cbu {
	colcon build --packages-up-to "$@"
}

function cbu_asan {
	colcon_build_asan --packages-up-to "$@"
}

function cbu_cert {
	colcon_build_cert --packages-up-to "$@"
}

function cbu_rel {
	colcon_build_rel --packages-up-to "$@"
}

function cbu_ubsan {
	colcon_build_ubsan --packages-up-to "$@"
}

function cbu_prof {
	colcon_build_prof --packages-up-to "$@"
}

function cbs {
	colcon build --packages-select "$@"
}

function cbs_asan {
	colcon_build_asan --packages-select "$@"
}

function cbs_cert {
	colcon_build_cert --packages-select "$@"
}

function cbs_rel {
	colcon_build_rel --packages-select "$@"
}

function cbs_ubsan {
	colcon_build_ubsan --packages-select "$@"
}

function cbs_prof {
	colcon_build_prof --packages-select "$@"
}

function colcon_test_in {
	local suffix=$1
	shift
	colcon test --build-base build_"$suffix" --install-base install_"$suffix" "$@"
}

function ct {
	colcon test-result --delete-yes
	(unset ROS_DOMAIN_ID; source /opt/ApexOS/setup.bash; colcon test --packages-select $1 && colcon test-result --verbose | bat)
}

function ct_cert {
	colcon test-result --test-result-base build_cert --delete-yes
	(export APEX_CERT=ON; unset ROS_DOMAIN_ID; source /opt/ApexOS/setup.bash; colcon test --build-base build_cert --install-base install_cert --packages-select $1 && colcon test-result --test-result-base build_cert --verbose | bat)
}

function ct_rel {
	colcon test-result --test-result-base build_rel --delete-yes
	(unset ROS_DOMAIN_ID; source /opt/ApexOS/setup.bash; colcon test --build-base build_rel --install-base install_rel --packages-select $1 && colcon test-result --test-result-base build_rel --verbose | bat)
}

function retest {
	rm -r {build,install}/"$1"
	cbs "$1" &&
	colcon test-result --delete-yes &&
	(unset ROS_DOMAIN_ID; source /opt/ApexOS/setup.bash; colcon test --packages-select $1 && colcon test-result --verbose | bat)
}

function retest_cert {
	rm -r {build,install}_cert/"$1"
	cbs_cert "$1" &&
	ct_cert "$1"
}

function retest_rel {
	rm -r {build,install}_rel/"$1"
	cbs_rel "$1" &&
	ct_rel "$1"
}